<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>web on My Blogs</title>
    <link>/tags/web/</link>
    <description>Recent content in web on My Blogs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; 2021 &lt;a href=&#34;https://www.wangchucheng.com/&#34;&gt;WANG Chucheng&lt;/a&gt; and &lt;a href=&#34;https://www.ruiqima.com/&#34;&gt;MA Ruiqi&lt;/a&gt;
</copyright>
    <lastBuildDate>Wed, 10 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/web/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>nginx配置</title>
      <link>/posts/2022-08-10-nginx-config/</link>
      <pubDate>Wed, 10 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/2022-08-10-nginx-config/</guid>
      <description>测试系统：Debian11
1.安装升级系统 sudo apt update  2.安装nginx sudo apt install nginx  3.申请域名 github学生包或者freenom免费域名，添加域名解析，使用nslookup命令查看是否解析成功，注意先不要使用cdn
4.申请证书 zerossl或者letsencrypt即可
80端口验证 sudo apt install python3-certbot-nginx  安装完成后：
sudo certbot –nginx  邮箱系统验证 dns验证 泛域名申请 以cloudflare为例：
创建cloudflare api密钥，记下token
创建cloudflare.ini配置文件并放入指定位置
dns_cloudflare_api_token = your_token  申请证书
certbot certonly \ --dns-cloudflare \ --dns-cloudflare-credentials ~/.secrets/certbot/cloudflare.ini \ -d example.com \ -d www.example.com  二级域名申请 sudo certbot -d my.example.com --manual --preferred-challenges dns certonly  注：根据提示添加txt域名映射记录，待域名生效后即可回车
5.编辑nginx配置文件 编辑/etc/nginx/sites-enabled/default文件
server { # SSL configuration # # listen 443 ssl default_server; # listen [::]:443 ssl default_server; # # Note: You should disable gzip for SSL traffic.</description>
    </item>
    
    <item>
      <title>nginx配置</title>
      <link>/zh/posts/2022-08-10-nginx-config/</link>
      <pubDate>Wed, 10 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>/zh/posts/2022-08-10-nginx-config/</guid>
      <description>测试系统：Debian11
1.安装升级系统 sudo apt update  2.安装nginx sudo apt install nginx  3.申请域名 github学生包或者freenom免费域名，添加域名解析，使用nslookup命令查看是否解析成功，注意先不要使用cdn
4.申请证书 zerossl或者letsencrypt即可
80端口验证 sudo apt install python3-certbot-nginx  安装完成后：
sudo certbot –nginx  邮箱系统验证 dns验证 泛域名申请 以cloudflare为例：
创建cloudflare api密钥，记下token
创建cloudflare.ini配置文件并放入指定位置
dns_cloudflare_api_token = your_token  申请证书
certbot certonly \ --dns-cloudflare \ --dns-cloudflare-credentials ~/.secrets/certbot/cloudflare.ini \ -d example.com \ -d www.example.com  二级域名申请 sudo certbot -d my.example.com --manual --preferred-challenges dns certonly  注：根据提示添加txt域名映射记录，待域名生效后即可回车
5.编辑nginx配置文件 编辑/etc/nginx/sites-enabled/default文件
server { # SSL configuration # # listen 443 ssl default_server; # listen [::]:443 ssl default_server; # # Note: You should disable gzip for SSL traffic.</description>
    </item>
    
    <item>
      <title>frp内网穿透</title>
      <link>/posts/2022-07-31-frp-config/</link>
      <pubDate>Sun, 31 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/2022-07-31-frp-config/</guid>
      <description>1.frp server端配置 [common] # frp监听的端口，默认是7000，可以改成其他的 bind_port = 14823 vhost_http_port = 12345 # 授权码，请改成更复杂的 token = 12345678 # frp管理后台端口，请按自己需求更改 dashboard_port = 7800 # frp管理后台用户名和密码，请改成自己的 dashboard_user = admin dashboard_pwd = admin enable_prometheus = true  2.frp client端配置 [common] server_addr = yourdomain server_port = 14823 #server端bind_port token = 12345678 #授权码 [ssh] #ssh远程链接 type = tcp local_ip = 127.0.0.1 local_port = 22 #本地ssh端口 remote_port = 6000 #远程ssh连接端口 [web1] type = http #http服务 local_port = 80 custom_domains = yourdomain  3.</description>
    </item>
    
    <item>
      <title>frp内网穿透</title>
      <link>/zh/posts/2022-07-31-frp-config/</link>
      <pubDate>Sun, 31 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>/zh/posts/2022-07-31-frp-config/</guid>
      <description>1.frp server端配置 [common] # frp监听的端口，默认是7000，可以改成其他的 bind_port = 14823 vhost_http_port = 12345 # 授权码，请改成更复杂的 token = 12345678 # frp管理后台端口，请按自己需求更改 dashboard_port = 7800 # frp管理后台用户名和密码，请改成自己的 dashboard_user = admin dashboard_pwd = admin enable_prometheus = true  2.frp client端配置 [common] server_addr = yourdomain server_port = 14823 #server端bind_port token = 12345678 #授权码 [ssh] #ssh远程链接 type = tcp local_ip = 127.0.0.1 local_port = 22 #本地ssh端口 remote_port = 6000 #远程ssh连接端口 [web1] type = http #http服务 local_port = 80 custom_domains = yourdomain  3.</description>
    </item>
    
  </channel>
</rss>
