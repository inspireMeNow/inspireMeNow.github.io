<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>c&#43;&#43; on My Blogs</title>
    <link>/tags/c&#43;&#43;/</link>
    <description>Recent content in c&#43;&#43; on My Blogs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; 2021 &lt;a href=&#34;https://www.wangchucheng.com/&#34;&gt;WANG Chucheng&lt;/a&gt; and &lt;a href=&#34;https://www.ruiqima.com/&#34;&gt;MA Ruiqi&lt;/a&gt;
</copyright>
    <lastBuildDate>Sun, 24 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/c++/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>c&#43;&#43;链表</title>
      <link>/posts/2022-04-24-c&#43;&#43;link/</link>
      <pubDate>Sun, 24 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/2022-04-24-c&#43;&#43;link/</guid>
      <description>//查找元素
std::pair&amp;lt;int, int&amp;gt; getElem(int a,list *l1) { list *b=l1; int count=0; for(;b-&amp;gt;next!=NULL;b=b-&amp;gt;next){ if(a==b-&amp;gt;a){ return std::pair&amp;lt;int, int&amp;gt;(a,count); //返回元素和下标 } count++; } if(b-&amp;gt;a==a){ return std::pair&amp;lt;int, int&amp;gt;(a,count); //未找到返回-1 } return std::pair&amp;lt;int, int&amp;gt;(a,-1); }  </description>
    </item>
    
    <item>
      <title>c&#43;&#43;链表</title>
      <link>/zh/posts/2022-04-24-c&#43;&#43;link/</link>
      <pubDate>Sun, 24 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>/zh/posts/2022-04-24-c&#43;&#43;link/</guid>
      <description>//查找元素
std::pair&amp;lt;int, int&amp;gt; getElem(int a,list *l1) { list *b=l1; int count=0; for(;b-&amp;gt;next!=NULL;b=b-&amp;gt;next){ if(a==b-&amp;gt;a){ return std::pair&amp;lt;int, int&amp;gt;(a,count); //返回元素和下标 } count++; } if(b-&amp;gt;a==a){ return std::pair&amp;lt;int, int&amp;gt;(a,count); //未找到返回-1 } return std::pair&amp;lt;int, int&amp;gt;(a,-1); }  </description>
    </item>
    
  </channel>
</rss>
